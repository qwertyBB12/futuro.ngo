/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: efKYYURoqLp2Ndnjoji8Cj
// Component: _rh2AV3BPl64

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";

import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import Button from "../../Button"; // plasmic-import: 0xgMYo2lU1H9/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: efKYYURoqLp2Ndnjoji8Cj/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: efKYYURoqLp2Ndnjoji8Cj/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: efKYYURoqLp2Ndnjoji8Cj/projectcss
import sty from "./PlasmicPartners.module.css"; // plasmic-import: _rh2AV3BPl64/css

import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: Fzv2z5kRmYBK/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: s_87OGbueP2l/icon
import FacebookSvgrepoComSvgIcon from "./icons/PlasmicIcon__FacebookSvgrepoComSvg"; // plasmic-import: 7UuVZE22RoDF/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: 46OHjqaCc92u/icon

createPlasmicElementProxy;

export type PlasmicPartners__VariantMembers = {};
export type PlasmicPartners__VariantsArgs = {};
type VariantPropType = keyof PlasmicPartners__VariantsArgs;
export const PlasmicPartners__VariantProps = new Array<VariantPropType>();

export type PlasmicPartners__ArgsType = {};
type ArgPropType = keyof PlasmicPartners__ArgsType;
export const PlasmicPartners__ArgProps = new Array<ArgPropType>();

export type PlasmicPartners__OverridesType = {
  partners?: Flex__<"div">;
  navigationBar?: Flex__<typeof NavigationBar>;
  slateArro?: Flex__<typeof PlasmicImg__>;
  ecosystemFooter3?: Flex__<"div">;
  columns?: Flex__<"div">;
};

export interface DefaultPartnersProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPartners__RenderFunc(props: {
  variants: PlasmicPartners__VariantsArgs;
  args: PlasmicPartners__ArgsType;
  overrides: PlasmicPartners__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = _useGlobalVariants();

  const currentUser = useCurrentUser?.() || {};

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicPartners.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicPartners.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicPartners.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicPartners.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicPartners.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicPartners.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicPartners.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicPartners.pageMetadata.ogImageSrc}
        />
        <link rel="canonical" href={PlasmicPartners.pageMetadata.canonical} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"partners"}
          data-plasmic-override={overrides.partners}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.partners
          )}
        >
          <Embed
            className={classNames("__wab_instance", sty.embedHtml__oOsHb)}
            code={
              '<script type="application/ld+json">\n{\n  "@context": "https://schema.org",\n  "@type": "NGO",\n  "name": "Futuro Partners",\n  "url": "https://futuro.ngo/partners",\n  "description": "Global collaborators and partner institutions working with Futuro to design and scale projects in leadership, innovation, and equity."\n}\n</script>'
            }
          />

          <NavigationBar
            data-plasmic-name={"navigationBar"}
            data-plasmic-override={overrides.navigationBar}
            brand={
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__czZt7
                )}
                component={Link}
                href={"#"}
                platform={"nextjs"}
              >
                <PlasmicImg__
                  data-plasmic-name={"slateArro"}
                  data-plasmic-override={overrides.slateArro}
                  alt={""}
                  className={classNames(sty.slateArro)}
                  displayHeight={"40px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage"] = true
                      ? (() => {
                          const actionArgs = { destination: `/` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage"] != null &&
                      typeof $steps["goToHomepage"] === "object" &&
                      typeof $steps["goToHomepage"].then === "function"
                    ) {
                      $steps["goToHomepage"] = await $steps["goToHomepage"];
                    }
                  }}
                  src={{
                    src: "/plasmic/futuro_ngo/images/slateD0ArroPng.png",
                    fullWidth: 750,
                    fullHeight: 750,
                    aspectRatio: undefined
                  }}
                />
              </PlasmicLink__>
            }
            className={classNames("__wab_instance", sty.navigationBar)}
            closeButton={
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__fn9Gm)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={"https://static1.plasmic.app/close.svg"}
              />
            }
            itemsGap={8}
            menuItems={
              <React.Fragment>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__r5Gox
                  )}
                  component={Link}
                  href={`/projects`}
                  platform={"nextjs"}
                >
                  {"Projects"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link___7XljM
                  )}
                  component={Link}
                  href={`/partners`}
                  platform={"nextjs"}
                >
                  {"Partners"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__fki5Q
                  )}
                  component={Link}
                  href={`/stories`}
                  platform={"nextjs"}
                >
                  {"Stories"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__kwhCi
                  )}
                  component={Link}
                  href={`/our-declaration`}
                  platform={"nextjs"}
                >
                  {"Our Declaration"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__nExNm
                  )}
                  component={Link}
                  href={"https://www.benextglobal.com/FUTUROmmxxv"}
                  platform={"nextjs"}
                >
                  {"Log In"}
                </PlasmicLink__>
                <Button
                  className={classNames("__wab_instance", sty.button__nTSh)}
                  color={"slateD0"}
                  end={
                    <Icon4Icon
                      className={classNames(projectcss.all, sty.svg__iv8PZ)}
                      role={"img"}
                    />
                  }
                  iconEnd={true}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eoG2M
                      )}
                    >
                      {"Become a Partner"}
                    </div>
                  }
                  linkTo={`/partners`}
                  size={"large"}
                  start={null}
                />
              </React.Fragment>
            }
            openButton={
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__ags7Q)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "1px"
                    : "auto"
                }
                src={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? {
                        src: "/plasmic/futuro_ngo/images/slateD0MenuSvg.svg",
                        fullWidth: 12,
                        fullHeight: 12,
                        aspectRatio: 1
                      }
                    : "https://static1.plasmic.app/menu.svg"
                }
              />
            }
            responsiveBreakpoint={768}
          />

          <Embed
            className={classNames("__wab_instance", sty.embedHtml__zcKsl)}
            code={
              '<section style="position: relative; width: 100%; margin: 0 auto; overflow: hidden;">\n  <!-- Wistia Background Embed -->\n  <div class="wistia_responsive_padding" style="padding:56.25% 0 0 0; position:relative;">\n    <div class="wistia_responsive_wrapper" style="height:100%; left:0; position:absolute; top:0; width:100%;">\n      <div class="wistia_embed wistia_async_twzdslp5dq videoFoam=true autoPlay=true muted=true loop=true playbar=false fullscreenButton=false controlsVisibleOnLoad=false" style="height:100%; width:100%">&nbsp;</div>\n    </div>\n  </div>\n  <script src="https://fast.wistia.net/assets/external/E-v1.js" async></script>\n\n  <!-- Hoya Blue Overlay -->\n  <div style="\n    background-color: rgba(1, 30, 65, 0.55);\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 2;">\n  </div>\n\n  <!-- Text Overlay -->\n  <div style="\n    position: absolute;\n    bottom: 2rem;\n    right: 2rem;\n    width: auto;\n    max-width: 90%;\n    text-align: right;\n    z-index: 3;">\n    <h1 style="\n      font-family: \'Oswald\', sans-serif;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #D0D0D0;\n      font-size: clamp(1rem, 6vw, 4rem);\n      line-height: 1.05;\n      margin: 0;">\n      Institutions That<br>Don\'t Just Support Change\u2014<br>they invest in it.\n    </h1>\n  </div>\n</section>\n\n<!-- Google Font Import -->\n<link href="https://fonts.googleapis.com/css2?family=Oswald:wght@700&display=swap" rel="stylesheet">'
            }
          />

          <div className={classNames(projectcss.all, sty.freeBox___8VSEt)}>
            <div className={classNames(projectcss.all, sty.freeBox__mMsJ3)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9C4Iq
                )}
              >
                {
                  "Our partners are universities, NGOs, foundations, and forward-thinking companies committed to building what comes next."
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rZsOg
                )}
              >
                {
                  "The world doesn\u2019t need more handshakes\u2014it needs blueprints. At Futuro, we partner with institutions that are ready to prototype the future through courageous collaboration.\n\nWhether you\u2019re a university seeking new pipelines, a foundation ready to fund generational change, or an organization committed to global equity, we invite you to co-author what comes next."
                }
              </div>
              <Button
                className={classNames("__wab_instance", sty.button___8ZuvI)}
                color={"slateD0"}
                end={
                  <Icon4Icon
                    className={classNames(projectcss.all, sty.svg__r88QT)}
                    role={"img"}
                  />
                }
                iconEnd={true}
                label={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bjWdy
                    )}
                  >
                    {"Become a Partner"}
                  </div>
                }
                linkTo={`/partners`}
                size={"large"}
                start={null}
              />
            </div>
          </div>
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
          ) ? (
            <div
              data-plasmic-name={"ecosystemFooter3"}
              data-plasmic-override={overrides.ecosystemFooter3}
              className={classNames(projectcss.all, sty.ecosystemFooter3)}
            >
              <div
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__ns3YV)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ffiyM)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__edSpK)}
                      displayHeight={"90px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"90px"}
                      src={{
                        src: "/plasmic/futuro_ngo/images/slateprofileArro2Png.png",
                        fullWidth: 750,
                        fullHeight: 750,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__vww3K)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vtgB1
                        )}
                      >
                        {"Connect with us"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__tq6Rs
                        )}
                      >
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__pXkhB)}
                          role={"img"}
                        />

                        <FacebookSvgrepoComSvgIcon
                          className={classNames(projectcss.all, sty.svg__gf3SJ)}
                          role={"img"}
                        />

                        <Icon28Icon
                          className={classNames(projectcss.all, sty.svg__ahUx)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__eOOqh)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jauGs)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7E2Eu
                      )}
                    >
                      {"PROJECTS & IMPACT"}
                    </div>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___1Mqxz
                      )}
                      component={Link}
                      href={`/projects`}
                      platform={"nextjs"}
                    >
                      {"Submit Your Project"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__iXzx3
                      )}
                      component={Link}
                      href={"https://www.plasmic.app/"}
                      platform={"nextjs"}
                    >
                      {"Changemaker Stories"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xQYxK
                      )}
                      component={Link}
                      href={`/partners`}
                      platform={"nextjs"}
                    >
                      {"Global Collaborations"}
                    </PlasmicLink__>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__xvepe)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kFipx)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__duEB
                      )}
                    >
                      {"LEARN & ENGAGE"}
                    </div>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__o9AWw
                      )}
                      component={Link}
                      href={`/our-declaration`}
                      platform={"nextjs"}
                    >
                      {"About"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xa39I
                      )}
                      component={Link}
                      href={`/partners`}
                      platform={"nextjs"}
                    >
                      {"Join the Movement"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__bXxq
                      )}
                      component={Link}
                      href={""}
                      platform={"nextjs"}
                    >
                      {"Become a Partner"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__sIZn
                      )}
                      component={Link}
                      href={`/our-declaration`}
                      platform={"nextjs"}
                    >
                      {"Careers"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___0BjVf
                      )}
                      component={Link}
                      href={`/projects`}
                      platform={"nextjs"}
                    >
                      {"Contact Us"}
                    </PlasmicLink__>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__ju4Mi)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mp9Uv)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jlmAn
                      )}
                    >
                      {"THE ECOSYSTEM"}
                    </div>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__lq5ZE
                      )}
                      component={Link}
                      href={`/`}
                      platform={"nextjs"}
                    >
                      <React.Fragment>
                        <React.Fragment>{"Futuro\n"}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {"    Global Impact HQ"}
                        </span>
                      </React.Fragment>
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__j1Ew9
                      )}
                      component={Link}
                      href={"https://www.benextglobal.com"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      <React.Fragment>
                        <React.Fragment>{"BeNeXT\n"}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {"    The Model Rewritting Education"}
                        </span>
                      </React.Fragment>
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__t4JQk
                      )}
                      component={Link}
                      href={"https://www.next.ngo"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      <React.Fragment>
                        <React.Fragment>{"NeXT\n"}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {"    The New Standard of Credentialing"}
                        </span>
                      </React.Fragment>
                    </PlasmicLink__>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__uPbOj)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__lmFpW
                    )}
                    component={Link}
                    href={"https://www.mitikah.co"}
                    platform={"nextjs"}
                    target={"_blank"}
                  >
                    <React.Fragment>
                      <React.Fragment>{"M\u00edtikah\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic" }}
                      >
                        {"    Where Story Drives Strategy"}
                      </span>
                    </React.Fragment>
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__iPbwj
                    )}
                    component={Link}
                    href={"https://www.medikah.co"}
                    platform={"nextjs"}
                    target={"_blank"}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Medikah\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic" }}
                      >
                        {"    Our definitive Project in Human Wellbeing"}
                      </span>
                    </React.Fragment>
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__mvLef
                    )}
                    component={Link}
                    href={"https://www.benextglobal.com/blog"}
                    platform={"nextjs"}
                    target={"_blank"}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Futuro Signal\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic" }}
                      >
                        {"    The Pulse of Global Change\u2013Decoded"}
                      </span>
                    </React.Fragment>
                  </PlasmicLink__>
                </div>
              </div>
            </div>
          ) : null}
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  partners: [
    "partners",
    "navigationBar",
    "slateArro",
    "ecosystemFooter3",
    "columns"
  ],
  navigationBar: ["navigationBar", "slateArro"],
  slateArro: ["slateArro"],
  ecosystemFooter3: ["ecosystemFooter3", "columns"],
  columns: ["columns"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  partners: "div";
  navigationBar: typeof NavigationBar;
  slateArro: typeof PlasmicImg__;
  ecosystemFooter3: "div";
  columns: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPartners__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPartners__VariantsArgs;
    args?: PlasmicPartners__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPartners__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPartners__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicPartners__ArgProps,
          internalVariantPropNames: PlasmicPartners__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPartners__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "partners") {
    func.displayName = "PlasmicPartners";
  } else {
    func.displayName = `PlasmicPartners.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "efKYYURoqLp2Ndnjoji8Cj"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicPartners = Object.assign(
  // Top-level PlasmicPartners renders the root element
  withUsePlasmicAuth(makeNodeComponent("partners")),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    slateArro: makeNodeComponent("slateArro"),
    ecosystemFooter3: makeNodeComponent("ecosystemFooter3"),
    columns: makeNodeComponent("columns"),

    // Metadata about props expected for PlasmicPartners
    internalVariantProps: PlasmicPartners__VariantProps,
    internalArgProps: PlasmicPartners__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Futuro Partners | Universities, NGOs & Founders",
      description:
        "We collaborate with universities, NGOs, and visionary partners to design and fund scalable impact.",
      ogImageSrc:
        "https://site-assets.plasmic.app/050c9095a9c42e8f9e09bf51b54aae39.png",
      canonical: "https://futuro.ngo/partners"
    }
  }
);

export default PlasmicPartners;
/* prettier-ignore-end */
